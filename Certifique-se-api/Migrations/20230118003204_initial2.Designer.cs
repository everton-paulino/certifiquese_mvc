// <auto-generated />
using System;
using Certifique_se_api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Certifique_se_api.Migrations
{
    [DbContext(typeof(PresenceListContext))]
    [Migration("20230118003204_initial2")]
    partial class initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Certifique_se_api.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Certifique_se_api.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerCnpj")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("StudentId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Certifique_se_api.Models.PresenceList", b =>
                {
                    b.Property<int>("PresenceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseNameCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCnpjCustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerNameCustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("InstructorNameInstructorId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentFuntionStudentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentNameStudentId")
                        .HasColumnType("int");

                    b.HasKey("PresenceListId");

                    b.HasIndex("CourseNameCourseId");

                    b.HasIndex("CustomerCnpjCustomerID");

                    b.HasIndex("CustomerNameCustomerID");

                    b.HasIndex("InstructorNameInstructorId");

                    b.HasIndex("StudentFuntionStudentId");

                    b.HasIndex("StudentNameStudentId");

                    b.ToTable("PresenceLists");
                });

            modelBuilder.Entity("Certifique_se_api.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("StudentFuntion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Certifique_se_api.Models.instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CourseNameCourseId")
                        .HasColumnType("int");

                    b.Property<string>("InstructorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorId");

                    b.HasIndex("CourseNameCourseId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Certifique_se_api.Models.Customer", b =>
                {
                    b.HasOne("Certifique_se_api.Models.Student", null)
                        .WithMany("PresenceList")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Certifique_se_api.Models.PresenceList", b =>
                {
                    b.HasOne("Certifique_se_api.Models.Course", "CourseName")
                        .WithMany("PresenceList")
                        .HasForeignKey("CourseNameCourseId");

                    b.HasOne("Certifique_se_api.Models.Customer", "CustomerCnpj")
                        .WithMany()
                        .HasForeignKey("CustomerCnpjCustomerID");

                    b.HasOne("Certifique_se_api.Models.Customer", "CustomerName")
                        .WithMany()
                        .HasForeignKey("CustomerNameCustomerID");

                    b.HasOne("Certifique_se_api.Models.instructor", "InstructorName")
                        .WithMany("PresenceList")
                        .HasForeignKey("InstructorNameInstructorId");

                    b.HasOne("Certifique_se_api.Models.Student", "StudentFuntion")
                        .WithMany()
                        .HasForeignKey("StudentFuntionStudentId");

                    b.HasOne("Certifique_se_api.Models.Student", "StudentName")
                        .WithMany()
                        .HasForeignKey("StudentNameStudentId");

                    b.Navigation("CourseName");

                    b.Navigation("CustomerCnpj");

                    b.Navigation("CustomerName");

                    b.Navigation("InstructorName");

                    b.Navigation("StudentFuntion");

                    b.Navigation("StudentName");
                });

            modelBuilder.Entity("Certifique_se_api.Models.instructor", b =>
                {
                    b.HasOne("Certifique_se_api.Models.Course", "CourseName")
                        .WithMany()
                        .HasForeignKey("CourseNameCourseId");

                    b.Navigation("CourseName");
                });

            modelBuilder.Entity("Certifique_se_api.Models.Course", b =>
                {
                    b.Navigation("PresenceList");
                });

            modelBuilder.Entity("Certifique_se_api.Models.Student", b =>
                {
                    b.Navigation("PresenceList");
                });

            modelBuilder.Entity("Certifique_se_api.Models.instructor", b =>
                {
                    b.Navigation("PresenceList");
                });
#pragma warning restore 612, 618
        }
    }
}
